{
  "extends": [
    "../../tsconfig.base.json",
    "../../tsconfig.lit.json"
  ],
  "compilerOptions": {
    /*
      TODO: look into moving settings from changing app.config.js to .env.
      Then I can disable allowJs and look into setting emitDeclarationOnly to false.
      I think this is needed to produce production output.
    */
    "allowJs": true,
    "experimentalDecorators": true,
    /*
      TODO: not sure if emitDeclarationOnly=false and noEmit=true is the correct
      configuration for this project.
    */
    "emitDeclarationOnly": false,
    "noEmit": true,
    "resolveJsonModule": true,
    "rootDir": ".",
    /*
      TODO: This probably shouldn't be here b/c you won't be able to debug
    */
    "sourceMap": false,
    /*
      Even though this is set in tsconfig.lit.json, unless it is set
      here the build tools (i.e. @web/dev-server) can't read it.
    */
    "useDefineForClassFields": false,
    "paths": {
      ":/*": ["./src/*"],
      "@rask/api/*": ["../../api/prisma/*"],
      "@rask/core/*": ["../../packages/core/src/*"],
      "@rask/chart/*": ["../../packages/chart/src/*"],
      "@rask/graphql/*": ["../../packages/graphql/src/*"],
      "@rask/identity/*": ["../../packages/identity/src/*"],
      "@rask/web/*": ["../../packages/web/src/*"]
    },
    "types": [
      "@rask/core/router",
      "@rask/core/client",
      "@rask/core/hmr"
    ]
  },
  "include": [
    "src/**/*.ts",
    "app.config.js"
  ],
  "exclude": [
    "dist",
    "node_modules"
  ],
  "references": [
    { "path": "../../api" },
    { "path": "../../packages/core" },
    { "path": "../../packages/chart" },
    { "path": "../../packages/graphql" },
    { "path": "../../packages/identity" },
    { "path": "../../packages/web" }]
}
