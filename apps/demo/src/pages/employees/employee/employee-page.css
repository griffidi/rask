* {
  box-sizing: border-box;
}

:host {
  --md-outlined-container-color: var(--md-sys-color-blue);
  --md-outlined-text-field-hover-outline-color: var(--md-sys-color-blue);
  --md-outlined-text-field-focus-outline-color: var(--md-sys-color-blue);
  --md-outlined-text-field-container-shape: 8px;
  --md-outlined-text-field-container-padding-vertical: 10px;
  --md-outlined-field-container-padding-vertical: 10px;
  /* --md-outlined-select-text-field-outline-color: var(--md-sys-color-blue); */
  --md-outlined-select-text-field-hover-outline-color: var(--md-sys-color-blue);
  --md-outlined-select-text-field-focus-outline-color: var(--md-sys-color-blue);
  --_container-inline-size: 900px;
  --_container-padding: 40px;

  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
  padding-block: var(--_container-padding);
  inline-size: 100%;
  block-size: calc(100vh - var(--rk-site-header-height) - calc(var(--_container-padding) * 2));
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  inline-size: 100%;
  block-size: 100%;
}

header,
footer,
form {
  inline-size: var(--_container-inline-size);
}

header {
  display: flex;
}

footer {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 15px;
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 50px;

  & > div {
    display: flex;
    flex-direction: column;
    gap: 40px;
    inline-size: 400px;
  }

  & > div:first-child {
    grid-column: 1;
  }

  & > div:last-child {
    grid-column: 2;
  }
}

fieldset {
  display: flex;
  flex-direction: column;
  gap: 10px;
  border: none;
  padding: 0;

  & label {
    font-size: 0.9em;
  }
}

.address {
  display: flex;
  align-items: center;
  gap: 12px;
}

.city {
  inline-size: 100%;
}

.state {
  inline-size: 90px;
}

.postal {
  inline-size: 150px;
}

md-outlined-select {
  --md-list-container-color: red;
  --md-list-list-item-container-color: var(--md-sys-color-surface-1);
  --md-menu-item-list-item-container-color: var(--md-sys-color-surface-1);
  --md-sys-color-surface: red;
}

::slotted(md-list) {
  background-color: red;
  --md-list-container-color: red;
  --md-sys-color-surface: red;
}
